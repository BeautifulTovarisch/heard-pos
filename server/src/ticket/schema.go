// schema.go
//
// Representation and database operations of a kitchen order.
//
package ticket

import (
	"fmt"
	"time"
	"github.com/jmoiron/sqlx"
	"os"
)

type Ticket struct {
	id int32
	order int32
	table int32
	server string

	opened time.Time
	closed time.Time
}

const Schema = `
CREATE TABLE IF NOT EXISTS ticket (
	id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	order integer NOT NULL DEFAULT 1,
	table integer NOT NULL,
	server varchar(255) NOT NULL,

	opened timestamp WITH TIMEZONE,
	closed timestamp WITH TIMEZONE
);
`

var insert = `
INSERT INTO ticket(order, table, server)
VALUES(:order, :table, :server)
RETURNING id;
`

// We increment order # based on total number of tickets since opening
func Insert(conn *sqlx.DB, ticket Ticket) {
	_, err := conn.NamedExec(insert, &ticket)

	if err != nil {
		fmt.Fprintf(os.Stderr, "Error inserting ticket %v", err)
	}
}
